// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/dream/list": {
            "get": {
                "description": "根据条件解梦",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "周公解梦"
                ],
                "summary": "根据条件解梦",
                "parameters": [
                    {
                        "type": "string",
                        "description": "梦的大分类",
                        "name": "biglx",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "梦的细分类",
                        "name": "smalllx",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "梦的主题",
                        "name": "title",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/failure/list": {
            "get": {
                "description": "查询所有通用故障",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Asset-GeneralFailure"
                ],
                "summary": "查询所有通用故障",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/failure/page": {
            "get": {
                "description": "分页查询通用故障",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Asset-GeneralFailure"
                ],
                "summary": "分页查询通用故障",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "分页大小",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "页码",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/failure/{id}": {
            "get": {
                "description": "根据ID查询故障",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Asset-GeneralFailure"
                ],
                "summary": "根据ID查询故障",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "故障ID",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "My GoDemoAPP API Doc",
	Description:      "This is a sample server celler server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
